stdcmd=\
forward fd back bk left lt right rt setheading seth towards \
setxy goto pendown pd penup pu showturtle st hideturtle ht home clearscreen cs \
make set to for dotimes repeat if ifelse \
xcor ycor heading pendown? pendownp showing? showingp \
sum + difference - product * quotient / remainder % minus \
~ random sin cos tan atan log pow pi \
less? lessp greater? greaterp equal? equalp notequal? notequalp and or not \
id turtles tell ask askwith

regexMatchable=openBracket closeBracket constant variable

constant.regex=^-?\\d+(\\.\\d+)?
constant.class=model.token.ConstantToken

variable.regex=:[a-zA-z]+
variable.class=model.token.VariableToken

openBracket.regex=\\[
openBracket.class=model.token.OpenBracketToken

closeBracket.regex=\\]
closeBracket.class=model.token.CloseBracketToken

standardCommand.class=model.token.StandardCommandToken

customCommand.class=model.token.CustomCommandToken

# vvvvvvvvvvvvvvvvvvv Movement vvvvvvvvvvvvvvvvvvvvvvvv
forward.argc=1
forward.class=model.executable.multipleCommand.movement.Forward

fd.argc=1
fd.class=model.executable.multipleCommand.movement.Forward

back.argc=1
back.class=model.executable.multipleCommand.movement.Back

bk.argc=1
bk.class=model.executable.multipleCommand.movement.Back

left.argc=1
left.class=model.executable.multipleCommand.movement.Left

lt.argc=1
lt.class=model.executable.multipleCommand.movement.Left

right.argc=1
right.class=model.executable.multipleCommand.movement.Right

rt.argc=1
rt.class=model.executable.multipleCommand.movement.Right

setheading.argc=1
setheading.class=model.executable.multipleCommand.movement.SetHeading

seth.argc=1
seth.class=model.executable.multipleCommand.movement.SetHeading

towards.argc=2
towards.class=model.executable.multipleCommand.movement.Towards

setxy.argc=2
setxy.class=model.executable.multipleCommand.movement.SetXY

goto.argc=2
goto.class=model.executable.multipleCommand.movement.SetXY

pendown.argc=0
pendown.class=model.executable.multipleCommand.movement.PenDown

pd.argc=0
pd.class=model.executable.multipleCommand.movement.PenDown

penup.argc=0
penup.class=model.executable.multipleCommand.movement.PenUp

pu.argc=0
pu.class=model.executable.multipleCommand.movement.PenUp

showturtle.argc=0
showturtle.class=model.executable.multipleCommand.movement.ShowTurtle

st.argc=0
st.class=model.executable.multipleCommand.movement.ShowTurtle

hideturtle.argc=0
hideturtle.class=model.executable.multipleCommand.movement.HideTurtle

ht.argc=0
ht.class=model.executable.multipleCommand.movement.HideTurtle

home.argc=0
home.class=model.executable.multipleCommand.movement.Home

clearscreen.argc=0
clearscreen.class=model.executable.multipleCommand.movement.ClearScreen

cs.argc=0
cs.class=model.executable.multipleCommand.movement.ClearScreen
# ^^^^^^^^^^^^^^^^^^^ Movement ^^^^^^^^^^^^^^^^^^^^^^^^^^^

# vvvvvvvvvvvvvvvvvvv Control Flow vvvvvvvvvvvvvvvvvvvvvvvv
make.argc=2
make.class=model.executable.singleCommand.controlFlow.Make

set.argc=2
set.class=model.executable.singleCommand.controlFlow.Make

procedureStub.class=model.executable.ProcedureStub

to.argc=3
to.class=model.executable.singleCommand.controlFlow.To

for.argc=2
for.class=model.executable.singleCommand.controlFlow.For

dotimes.argc=2
dotimes.class=model.executable.singleCommand.controlFlow.DoTimes

repeat.argc=2
repeat.class=model.executable.singleCommand.controlFlow.Repeat

if.argc=2
if.class=model.executable.singleCommand.controlFlow.If

ifelse.argc=3
ifelse.class=model.executable.singleCommand.controlFlow.IfElse
# ^^^^^^^^^^^^^^^^^^^ Control Flow  ^^^^^^^^^^^^^^^^^^^^^^^^

# vvvvvvvvvvvvvvvvvvv Queries vvvvvvvvvvvvvvvvvvvvvvvvvvv
xcor.argc=0
xcor.class=model.executable.multipleCommand.queries.XCorQuery

ycor.argc=0
ycor.class=model.executable.multipleCommand.queries.YCorQuery

heading.argc=0
heading.class=model.executable.multipleCommand.queries.HeadingQuery

pendown?.argc=0
pendown?.class=model.executable.multipleCommand.queries.PenDownQuery

pendownp.argc=0
pendownp.class=model.executable.multipleCommand.queries.PenDownQuery

showing?.argc=0
showing?.class=model.executable.multipleCommand.queries.ShowingQuery

showingp.argc=0
showingp.class=model.executable.multipleCommand.queries.ShowingQuery
# ^^^^^^^^^^^^^^^^^^^ Queries ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# vvvvvvvvvvvvvvvvvvv Math vvvvvvvvvvvvvvvvvvvvvvvv
sum.argc=2
sum.class=model.executable.singleCommand.math.Sum
+.argc=2
+.class=model.executable.singleCommand.math.Sum
difference.argc=2
difference.class=model.executable.singleCommand.math.Difference
-.argc=2
-.class=model.executable.singleCommand.math.Difference
product.argc=2
product.class=model.executable.singleCommand.math.Product
*.argc=2
*.class=model.executable.singleCommand.math.Product
quotient.argc=2
quotient.class=model.executable.singleCommand.math.Quotient
/.argc=2
/.class=model.executable.singleCommand.math.Quotient
remainder.argc=2
remainder.class=model.executable.singleCommand.math.Remainder
%.argc=2
%.class=model.executable.singleCommand.math.Remainder
minus.argc=1
minus.class=model.executable.singleCommand.math.Minus
~.argc=1
~.class=model.executable.singleCommand.math.Minus
random.argc=1
random.class=model.executable.singleCommand.math.Random
sin.argc=1
sin.class=model.executable.singleCommand.math.Sin
cos.argc=1
cos.class=model.executable.singleCommand.math.Cos
tan.argc=1
tan.class=model.executable.singleCommand.math.Tan
atan.argc=1
atan.class=model.executable.singleCommand.math.Atan
log.argc=1
log.class=model.executable.singleCommand.math.Log
pow.argc=2
pow.class=model.executable.singleCommand.math.Pow
pi.argc=0
pi.class=model.executable.singleCommand.math.Pi
# ^^^^^^^^^^^^^^^^^^^ Math ^^^^^^^^^^^^^^^^^^^^^^^^

# vvvvvvvvvvvvvvvvvvv Boolean vvvvvvvvvvvvvvvvvvvvvvvv
less?.argc=2
less?.class=model.executable.singleCommand.bool.Less
lessp.argc=2
lessp.class=model.executable.singleCommand.bool.Less
greater?.argc=2
greater?.class=model.executable.singleCommand.bool.Greater
greaterp.argc=2
greaterp.class=model.executable.singleCommand.bool.Greater
equal?.argc=2
equal?.class=model.executable.singleCommand.bool.Equal
equalp.argc=2
equalp.class=model.executable.singleCommand.bool.Equal
notequal?.argc=2
notequal?.class=model.executable.singleCommand.bool.NotEqual
notequalp.argc=2
notequalp.class=model.executable.singleCommand.bool.NotEqual
and.argc=2
and.class=model.executable.singleCommand.bool.And
or.argc=2
or.class=model.executable.singleCommand.bool.Or
not.argc=1
not.class=model.executable.singleCommand.bool.Not
# ^^^^^^^^^^^^^^^^^^^ Boolean ^^^^^^^^^^^^^^^^^^^^^^^^

# vvvvvvvvvvvvvvvvvvv Multiple vvvvvvvvvvvvvvvvvvvvvvvvvvv
id.argc=0
id.class=model.executable.multipleCommand.Id
turtles.argc=0
turtles.class=model.executable.multipleCommand.Turtles
tell.argc=1
tell.class=model.executable.multipleCommand.Tell
ask.argc=2
ask.class=model.executable.multipleCommand.Ask
askwith.argc=2
askwith.class=model.executable.multipleCommand.AskWith
# ^^^^^^^^^^^^^^^^^^^ Multiple ^^^^^^^^^^^^^^^^^^^^^^^^^^^